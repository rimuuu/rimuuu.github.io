{"componentChunkName":"component---src-templates-index-template-js","path":"/page/5","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/object/200510","categorySlug":"/category/javascript/"},"frontmatter":{"title":"[JavaScript] 객체지향 프로그래밍과 ES6 Class 기초  ","date":"2020-05-10T01:12:03.284Z","category":"javascript","description":"객체(object)는 일상을 살면서 우리가 명백하게 볼 수 있고 관찰할 수 있는 대상이다. 자동차, 자전거, 컴퓨터, 토끼, 오리, 강아지, 나무 등등 소프트웨어 세계에서는 구현할 대상을 객체라고 부른다."}}},{"node":{"fields":{"slug":"/posts/object/200508/2","categorySlug":"/category/javascript/"},"frontmatter":{"title":"[JavaScript] ES6의 주요 문법 정리 ","date":"2020-05-08T02:12:03.284Z","category":"javascript","description":"ES6에서는 주로 불필요한 타이핑을 줄이고 코드를 효율적으로 작성하기 위한 방향으로 문법적인 부분이 많이 개선되었다. ES6의 내용 전체를 살펴볼 수는 없지만 주요한 내용 위주로 정리해두고 자주 읽어보면서 익숙해져야겠다. "}}},{"node":{"fields":{"slug":"/posts/object/200508/","categorySlug":"/category/java-script/"},"frontmatter":{"title":"[JavaScript] 객체(object) 개념과 객체에 접근하는 법 정리, 예제 풀이 ","date":"2020-05-08T01:12:03.284Z","category":"javaScript","description":"객체는 키(key)-값(value) 쌍으로된 데이터의 모음으로, 순서에 상관없이 저장이 된다. 그래서 배열처럼 순서대로 index로 접근하는게 아니라 key로 데이터에 접근한다. 키는 마치 특정 값을 갖고 있는 변수 같은 역할을 해서, 해당 키로 프로퍼티에 어떤 값이 저장되었는지 알 수 있다."}}},{"node":{"fields":{"slug":"/posts/react/200507/2","categorySlug":"/category/react/"},"frontmatter":{"title":"[React Basis] Component Life Cycle API","date":"2020-05-07T05:12:03.284Z","category":"react","description":"모든 Componenent들은 life cycle이라는 api를 가지는데, 이는 기본적으로 react가 component를 생성하고, 업데이트하고, 제거할 때 호출할 수 있는 함수들을 말한다."}}}]}},"pageContext":{"currentPage":5,"postsLimit":4,"postsOffset":20,"prevPagePath":"/page/4","nextPagePath":"/page/6","hasPrevPage":true,"hasNextPage":true}}}