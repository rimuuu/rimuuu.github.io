{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/linux/200501/","result":{"data":{"markdownRemark":{"id":"da5b4f5f-1c87-5161-a456-df1c712b8358","html":"<h2 id=\"1-리눅스-기초\" style=\"position:relative;\"><a href=\"#1-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B8%B0%EC%B4%88\" aria-label=\"1 리눅스 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 리눅스 기초</h2>\n<p>Linux는 시스템을 운영하는데 가장 널리 사용되는 운영체제다. Windows 시스템이나 application이 아닌 이상 일반적으로 시스템 서버는 linux 기반으로 운영되고 있다. Linux에 시스템을 실행하고 유지하고 관리하기 때문에 개발자는 반드시 linux에 대해 잘 이해하고 있어야 한다.</p>\n<h3 id=\"linux-file-system-hierarchy-fhs\" style=\"position:relative;\"><a href=\"#linux-file-system-hierarchy-fhs\" aria-label=\"linux file system hierarchy fhs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux File System Hierarchy (FHS)</h3>\n<p><img src=\"https://user-images.githubusercontent.com/60246689/80796375-f868c000-8bd9-11ea-88c4-bdcdfaba14ee.png\" alt=\"스크린샷 2020-04-28 오후 10 18 50\"></p>\n<h4 id=\"root-directory\" style=\"position:relative;\"><a href=\"#root-directory\" aria-label=\"root directory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Root Directory</h4>\n<p>가장 위에는 / 디렉토리가 있다. Root 디렉토리 (directory) 라고 한다.\n시작점인 root 디렉토리 안에 여러 하위 디렉토리들이 있고 각 하위 디렉토리들안에 또 하위 디렉토리 들이 있는 식이다.</p>\n<p>실제 터미널에서 / 디렉토리로 가보자.</p>\n<p><code class=\"language-text\">cd /</code></p>\n<p><code class=\"language-text\">cd</code> 명령어는 “change directory”의 약자로 특정 디렉토리로 이동할때 사용된다. cd 명령어 다음에 가고자 하는 디렉토리 경로를 입력하면 된다.</p>\n<p>Root 디렉토리로 변경했으면 ls 명령어를 실행하자.</p>\n<p><code class=\"language-text\">ls</code> 명령어는 list의 약자이며 해당 디렉토리의 내용물들을 나열해준다. <br>\n<code class=\"language-text\">ls -a</code> 는 숨김파일 까지 모두 나열해준다.</p>\n<p>Root 디렉토리 안에 많은 하위 디렉토리들이 있는 것을 볼 수 있다. 그 중 home 디렉토리가 있는것을 볼 수 있다. home 디렉토리 안으로 가보면 /Users 디렉토리에 유저의 home 디렉토리가 있다.</p>\n<p><code class=\"language-text\">pwd</code> 현재 자신이 어디에 있는지 위치를 알려준다.</p>\n<h3 id=\"home-directory\" style=\"position:relative;\"><a href=\"#home-directory\" aria-label=\"home directory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Home Directory</h3>\n<p>일반사용자에게 제공되는 전용공간.\n시스템 디렉토리 외에 일반 사용자가 취할 수 있는 유일한 전용공간\nhome디렉토리에 가는 방법은 다른 디렉토리에 위치해있을때,\n<code class=\"language-text\">cd</code> 라고 입력하기만 해도 홈 디렉토리로 가게 된다.\n혹은 <code class=\"language-text\">cd ~</code> 를 입력하면 home디렉토리로 이동한다.\n(참고: 물결은 틸다라고 부르고 리눅스에서는 home 디렉토리를 의미한다)</p>\n<h3 id=\"directory-경로\" style=\"position:relative;\"><a href=\"#directory-%EA%B2%BD%EB%A1%9C\" aria-label=\"directory 경로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Directory 경로</h3>\n<p>디렉토리 경로에는 2가지 유형이 있는데 절대경로(absolute path)와 상대경로(relative path)이다.</p>\n<p><code class=\"language-text\">절대경로(Absolute Path)</code>\nAbsolute path는 이름 그대로 절대적 경로 이다. 즉 완전한 경로이라는 뜻이다. Absolute path는 root 디렉토리 부터 시작하는 경로를 뜻한다. Root 디렉토리에서 부터 현재위치까지 나열된 경로다.</p>\n<p><code class=\"language-text\">절대경로(Relative Path)</code>\nRelative path는 이름 그대로 “상대적인” 경로 이다. 현재 내 위치와 상관없이 이동 할 수 있는 absolute path와 다르게 relative path는 현재 내 위치를 기반으로 움직이는 경로이다. 여기서 기억해야할 중요한 2가지 심볼이 있다. . 과 .. 이다.</p>\n<p><code class=\"language-text\">.(single dot)</code>: 현재경로\n. (single dot) 은 현재 디렉토리를 이야기 한다.\n만약 현재 <code class=\"language-text\">/Users/sori</code> 디렉토리에 있는데 <code class=\"language-text\">bin</code>이라는 하위 경로로 가고 싶다면 <code class=\"language-text\">cd./bin</code>이라고 입력한다. 디렉토리 경로가 길때 편하게 쓰기 위한 심볼이다.</p>\n<p><code class=\"language-text\">..(double dot)</code>: 상위경로\n<code class=\"language-text\">..</code> 는 현재 디렉토리 바로 전 디렉토리, 즉 현재 디렉토리의 상위 디렉토리를 뜻한다.\n만약 두 단계 상위에 있는 경로로 이동하고 싶다면 <code class=\"language-text\">cd ../..</code> 이라고 중첩해서 쓸 수도 있다.</p>\n<h2 id=\"2-configs-환경설정-파일\" style=\"position:relative;\"><a href=\"#2-configs-%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC\" aria-label=\"2 configs 환경설정 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Configs 환경설정 파일</h2>\n<p>Config file\n리눅스에는 설정을 주로 파일을 통해서 한다. 그리고 여러 config file, 즉 여러 설정 파일들이 있다. 너무나 다양한 설정 파일들이 있어서 다 알기가 힘들 정도이다. 그 중 가장 중요한 설정 파일이 바로 shell 설정 파일이다. 각 shell 마다 고유 설정 파일이 있다. Bash는 .bashrc 라는 설정파일을 사용하고 zsh는 .zshrc 라는 설정 파일을 사용한다.</p>\n<p>Shell 설정 파일을 비롯한 많은 설정 파일들이 대부분 유저의 home 디렉토리에 있다. Zsh 설정 파일도 마찬가지 이다.\n환경설정 파일은 .(dot)파일이라고도 부르고 이는 숨김파일을 의미한다.\nls에는 다양한 옵션이 존재하는데 여기서 조금 더 자세히 보는 옵션 l과 숨김파일도 보여주는 a 옵션을 한번에 같이 쓸 수 있다.\n<code class=\"language-text\">ls -la</code>\n그럼 이러한 설정 파일을 통해 무엇을 설정해줘야할까?\n아주 많은 설정을 할 수 있지만 그 중 가장 중요한 것은 PATH 환경 변수 설정이다.</p>\n<h2 id=\"3-path-enviroment-variable-환경변수-path\" style=\"position:relative;\"><a href=\"#3-path-enviroment-variable-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-path\" aria-label=\"3 path enviroment variable 환경변수 path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. PATH Enviroment Variable 환경변수 PATH</h2>\n<p>환경 변수란 shell의 어떠한 설정 값을 가지고 있는 변수를 말한다. 그리고 이러한 환경 변수들은 shell이 돌아가는 동안 계속 존재하며 사용된다.</p>\n<p>리눅스환경에서 env를 치면 환경변수들을 보여주는데, 이것은 단순히 쉘만을 위해서가 아니라 리닉스를 위해 존재하는데, 눈여겨 봐야하는건 홈과 PATH라는 설정이다. PATH 환경 변수는 명령어들을 찾을 수 있는 경로들을 저장해놓은 환경 변수 이다.\n그리고 환경변수를 구분할때에는 콜론을 사용한다.</p>\n<p>특정 경로의 환경 변수를 보고싶을때는 echo 명령어를 이용한다. <br>\n<code class=\"language-text\">echo $HOME</code>은 HOME 환경변수 값을 보여준다.</p>\n<h3 id=\"환경변수-설정-연습\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95-%EC%97%B0%EC%8A%B5\" aria-label=\"환경변수 설정 연습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경변수 설정 연습</h3>\n<p>bash 설정파일에 환경변수에 특정경로를 추가하는 작업을 해보자.</p>\n<p><code class=\"language-text\">mkdir</code> 새로운 디렉토리 생성\n<code class=\"language-text\">mkdir abcd</code></p>\n<p><code class=\"language-text\">cd ..</code>\n<code class=\"language-text\">vi .bashrc</code> 배쉬 설정파일에 가서 path를 추가한다.\n<code class=\"language-text\">export PATH=/home/abcd:$PATH</code> 저장 후 나가기</p>\n<p><code class=\"language-text\">source .bashrc</code> 배쉬 설정파일을 다시 읽어들인다.\n<code class=\"language-text\">echo $PATH</code> echo명령어로 패스를 찍어본다.</p>\n<h2 id=\"4-basic-shell-commands\" style=\"position:relative;\"><a href=\"#4-basic-shell-commands\" aria-label=\"4 basic shell commands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Basic Shell Commands</h2>\n<p>아래의 명령어들은 앞으로 리눅스를 사용하면서 자주 사용하게 될 명령어다.</p>\n<p><code class=\"language-text\">cd</code> change directory의 약자. 해당 디렉토리로 간다.</p>\n<p><code class=\"language-text\">ls</code> list의 약자. 해당 디렉토리에 있는 모든 파일을 나열한다.</p>\n<p><code class=\"language-text\">mv</code> move의 약자. 파일 하나 혹은 여러개의 파일을 옮긴다.\n<code class=\"language-text\">mv original_file new_file</code> 형식으로 작성하고, 커맨드가 실행되고 나면 기존 경로파일은 삭제된다.</p>\n<p><code class=\"language-text\">cp</code>copy의 약자. 파일, 디렉토리를 복사한다.</p>\n<p><code class=\"language-text\">cat</code> catch의 약자. 파일 내용을 출력한다.</p>\n<p><code class=\"language-text\">less</code> 파일 내용을 보는 또 다른 방법. cat과 달리 터미널 세션을 방해하지 않으면서 파일 내에서 양방향 탐색을 할 수 있다.</p>\n<p><code class=\"language-text\">tail</code> 파일 마지막 행을 기준으로 지정한 행까지 내용 일부를 출력한다. 기본값으로 마지막 10줄을 출력한다.</p>\n<p><code class=\"language-text\">nohup</code> ‘no hang up’의 약자(<code class=\"language-text\">끊지마!!!!</code>). 터미널 세션이 끊겨도 실행을 멈추지 않고 동작하도록 함</p>\n<p><code class=\"language-text\">rm</code> remove의 약자로, 하나 이상의 파일을 삭제할 때 사용되지만 옵션값을 주면 디렉토리도 삭제할 수 있다.\n<code class=\"language-text\">rm -r</code> 디렉토리 삭제하기\n<code class=\"language-text\">rm -rf</code> 현재 디렉토리에 속한 모든 파일과 디렉토리를 삭제한다.</p>\n<p><code class=\"language-text\">mkdir</code> make directory의 약자. 새로운 폴더를 하나 만든다.</p>\n<p><code class=\"language-text\">clear</code> 기존 터미널 화면을 지운다.</p>\n<p><code class=\"language-text\">pwd</code> print work directory의 약자. 현재 작업중인 디렉토리 경로를 보여준다.</p>\n<p><code class=\"language-text\">chmod</code> 시스템 파일 또는 객체의 액세스 권한을 변경하거나 수정하는데 사용하는 가장 강력한 linux 명령어 중 하나.</p>\n<p><code class=\"language-text\">chown</code> chmod 명령과 매우 유사한데 액세스 권한을 변경하는 대신 사용자가 파일 또는 디렉토리 소유권을 변경할 수 있다.</p>\n<p><code class=\"language-text\">sudo</code> 권한이 없는 사용자가 낮은 수준의 권한이 필요한 파일에 액세스하고 수정할 수 있다. (관리자모드라고도 함)</p>\n<p><code class=\"language-text\">grep</code> 대량의 텍스트파일에서 패턴을 검색할때 사용할 수 있는 강력한 명령어.</p>\n<p><code class=\"language-text\">history</code> 터미널 세션 기록을 출력한다</p>\n<p><code class=\"language-text\">ps</code> 현재 시스템에서 실행중인 프로세스를 시각화 할 수 있음.\n<br>\n<br>\n<br></p>\n<p><em>이글은 위코드 부트캠프의 소중한 공부자료를 보고 정리한 내용입니다.</em></p>","fields":{"slug":"/posts/linux/200501/","tagSlugs":["/tag/linux/","/tag/terminal/"]},"frontmatter":{"date":"2020-05-01T07:12:03.284Z","description":"Linux는 시스템을 운영하는데 가장 널리 사용되는 운영체제다. Windows 시스템이나 application이 아닌 이상 일반적으로 시스템 서버는 linux 기반으로 운영되고 있다. Linux에 시스템을 실행하고 유지하고 관리하기 때문에 개발자는 반드시 linux에 대해 잘 이해하고 있어야 한다.","tags":["Linux","Terminal"],"title":"[Linux] Linux & Terminal 기초 ","socialImage":"/media/42-line-bible.jpg"}}},"pageContext":{"slug":"/posts/linux/200501/"}}}