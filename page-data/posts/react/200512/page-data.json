{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react/200512","result":{"data":{"markdownRemark":{"id":"afb2d449-f09f-5b97-8efb-e76957914ee4","html":"<h1 id=\"1-cracreate-react-app\" style=\"position:relative;\"><a href=\"#1-cracreate-react-app\" aria-label=\"1 cracreate react app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. CRA(Create-React-App)</h1>\n<p>CRA(create-react-app)은 페이스북에서 제공하는 리액트 보일러플레이트이다.\n리액트를 사용하기 위해 필요한 개발 환경을 설정하고 최신의 JavaScript를 사용할 수 있도록 도와주는 역할을 한다.</p>\n<h2 id=\"react-프로젝트-초기-세팅\" style=\"position:relative;\"><a href=\"#react-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B4%88%EA%B8%B0-%EC%84%B8%ED%8C%85\" aria-label=\"react 프로젝트 초기 세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 프로젝트 초기 세팅</h2>\n<ul>\n<li>node.js와 npm이 필요하다. (node가 설치되면 npm도 함께 설치된다.)</li>\n<li><code class=\"language-text\">npx create-react-app 프로젝트이름</code> <br>\n설치가 완료되면 프로젝트이름으로 설정한 폴더에 리액트 앱을 만들기 위해 필요한 세팅이 완료된 상태가 설치된다.</li>\n<li><code class=\"language-text\">npm start</code> <br>\n리액트가 서버에서 돌아가기 시작하고 개발을 시작하면 된다.</li>\n</ul>\n<h3 id=\"cra의-폴더-구성\" style=\"position:relative;\"><a href=\"#cra%EC%9D%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%84%B1\" aria-label=\"cra의 폴더 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRA의 폴더 구성</h3>\n<p>기본적인 뼈대는 다음과 같다.</p>\n<ul>\n<li><code class=\"language-text\">node_modules</code> <br>\n해당 프로젝트를 위해 설치된 모든 패키지들의 실제 소스코드들이 담겨있는 폴더. 실제로 건드릴 일이 거의 없다고 보면 된다.</li>\n<li><code class=\"language-text\">package.json</code> <br>\n설치된 패키지들의 이름과 버전정보(“dependencies”), 그리고 리액트 명령어가 정의되어 있다. (“scripts”) <br>\n어떤 패키지를 설치할때 —save 라는 옵션을 주면 자동으로 버전정보가 업데이트가 된다.</li>\n<li><code class=\"language-text\">.gitignore</code> <br>\ngit에 굳이 올리면서 관리할 필요가 없는 파일의 경우 이곳에 작성해서 git이 무시하도록 한다. node_modules같이 용량이 큰 패키지들을 전부 다 git에 올릴 필요가 없기 때문에 보통 .gitignore에 적어두고 package.json만 올린다. 다른사람이 내 소스코드를 git clone했을때 npm같은 패키지매니저가 package.json에 있는 정보를 읽고 내 컴퓨터에 없는 패키지의 경우 알아서 다운받아준다.</li>\n<li><code class=\"language-text\">public</code> <br>\nindex.html이 들어있다.</li>\n<li><code class=\"language-text\">src</code> <br>\n실제로 개발작업을 하는 가장 주된 공간이다.</li>\n</ul>\n<h3 id=\"src-하위에-폴더-구성-하는-방법-convention\" style=\"position:relative;\"><a href=\"#src-%ED%95%98%EC%9C%84%EC%97%90-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%84%B1-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-convention\" aria-label=\"src 하위에 폴더 구성 하는 방법 convention permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>src 하위에 폴더 구성 하는 방법 (convention)</h3>\n<br>\n<img width=\"669\" alt=\"&#x1109;&#x1173;&#x110F;&#x1173;&#x1105;&#x1175;&#x11AB;&#x1109;&#x1163;&#x11BA; 2020-05-17 &#x110B;&#x1169;&#x1112;&#x116E; 1 30 28\" src=\"https://user-images.githubusercontent.com/60246689/82135881-b4fd8b00-9842-11ea-947e-f78666d35e0b.png\">\n<br>\n<ul>\n<li><code class=\"language-text\">component</code> : Header / Footer\n페이지마다 반복되는 요소들은 컴포넌트 폴더안에 넣고 재사용 한다. 컴포넌트파일과 css파일은 같은 폴더에 배치한다.</li>\n<li><code class=\"language-text\">images</code> : 개발에 필요한 모든 이미지들을 관리한다.</li>\n<li><code class=\"language-text\">pages</code> : Login / Main 등 구성하고싶은 실제 페이지별로 컴포넌트를 폴더로 만들어서 관리한다.</li>\n<li><code class=\"language-text\">styles</code> : reset.css / common.css처럼 전역에 공통적으로 적용되어야하는 스타일 파일을 관리한다. 참고로 common.css는 브랜드의 대표 컬러, 폰트 등의 스타일을 정의해놓는 용으로 사용한다.</li>\n</ul>\n<h1 id=\"2-react-jsx\" style=\"position:relative;\"><a href=\"#2-react-jsx\" aria-label=\"2 react jsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. React JSX</h1>\n<h2 id=\"about-jsx\" style=\"position:relative;\"><a href=\"#about-jsx\" aria-label=\"about jsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About JSX…</h2>\n<p>JSX는 React에서 사용하는 javascript의 확장문법(syntax extension for JavaScript)이다. <br>\n브라우저는 원래 JSX 문법을 이해하지 못하지만, babel과 webpack과 같은 패키지들이 이 JSX 형식의 코드를 javascript로 컴파일해주는 과정을 통해\n화면에서 렌더링된다. <br>\n이번 포스팅에서는 리액트를 사용하기 위해 필수적으로 알아야하는 기본 JSX 문법들을 정리하려고 한다.</p>\n<h2 id=\"jsx-element-만드는-방법\" style=\"position:relative;\"><a href=\"#jsx-element-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"jsx element 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX element 만드는 방법</h2>\n<p>HTML문법을 JavaScript 코드 내부에 써주면 그것이 바로 JSX이다. 그런데, javascript 파일 안에서 작동하기 때문에 JSX도 본연의 javascript처럼\n변수에 저장할 수도 있고, 함수의 인자로 넘길 수도 있다. <br>\n아래의 코드는 객체에 저장한 JSX요소를 변수로 선언한 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> hi <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hi</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myFavorite <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  food<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">샐러드</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  animal<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">dog</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  hobby<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">programming</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"jsx에서-attribute속성-주기\" style=\"position:relative;\"><a href=\"#jsx%EC%97%90%EC%84%9C-attribute%EC%86%8D%EC%84%B1-%EC%A3%BC%EA%B8%B0\" aria-label=\"jsx에서 attribute속성 주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX에서 attribute(속성) 주기</h2>\n<p>태그에 attribute(속성)을 주고 싶을 때는 항상 \"\" 쌍따옴표로 감싸줘야한다. attribute를 추가하고 싶을 때는 실제 HTML에서 쓰는 attribute name(속성명)과 다를 수 있으니 <a href=\"https://reactjs.org/docs/dom-elements.html#all-supported-html-attributes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react 공식문서</a>를 참고하자.</p>\n<p>예를 들어, class를 주고 싶을 때 원래 속성명은 class이지만 JSX에서는 className을 사용해야한다.</p>\n<p><code class=\"language-text\">const hi = &lt;input readOnly={true} /&gt;;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> myFavorite <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  food<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">샐러드</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  animal<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">dog</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  hobby<span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">programming</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"self-closing-tag\" style=\"position:relative;\"><a href=\"#self-closing-tag\" aria-label=\"self closing tag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self-Closing Tag</h3>\n<p>그리고 JSX에서는 어떤 태그라도 self closing tag가 항상 가능하다. <br>\n<code class=\"language-text\">&lt;input&gt;</code>과 같이 하나의 태그가 요소인 경우에는 <br>\n<code class=\"language-text\">&lt;input /&gt;</code>와 같이 항상 /으로 끝내줘야하고,\n<code class=\"language-text\">&lt;div&gt;&lt;/div&gt;</code>는 <code class=\"language-text\">&lt;div /&gt;</code>처럼 사용할 수도 있다.</p>\n<h2 id=\"nested-jsx\" style=\"position:relative;\"><a href=\"#nested-jsx\" aria-label=\"nested jsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nested JSX</h2>\n<ol>\n<li>(필수) 소괄호로 감싸기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> good <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">hi</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>중첩된 요소를 만들려면 전체 태그를 () 소괄호로 감싸줘야한다.</p>\n<p>2.(필수) 항상 하나의 태그로 시작해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> wrong <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">list1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">list2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 제일 처음 요소가 sibling이면 안되고 무조건 하나의 태그로 감싸져야 한다.\n아래의 코드처럼 첫 요소는 하나의 태그로 감싸기.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">list1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">list2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"rendering\" style=\"position:relative;\"><a href=\"#rendering\" aria-label=\"rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendering</h2>\n<p>html 요소(element), 또는 React 요소 등의 코드가 눈으로 볼 수 있도록 그려지는 것을 렌더링(rendering) 이라고 말한다.</p>\n<p>React 요소가 DOM node에 추가되어 화면에 렌더되려면 ReactDOM.render 함수를 사용한다. 첫 번째 인자에는 JSX로 React 요소를 인자로 넘기고, 두 번째 인자는 해당 요소를 렌더하고 싶은 container(부모요소)를 전달한다.\n즉 내가 렌더하고싶은 요소를 첫번째인자에, 그리고 렌더하고싶은 위치를 두번째 인자로 전달한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<br>\n<br>\n<br>\n<p><em>이글은 wecode bootcamp의 멘토 <a href=\"https://yeri-kim.github.io/posts/react-jsx/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">예리님 블로그</a> 내용과 리액트 세션을 학습하고 정리한 포스팅입니다.</em></p>","fields":{"slug":"/posts/react/200512","tagSlugs":["/tag/react/"]},"frontmatter":{"date":"2020-05-12T01:12:03.284Z","description":"CRA를 이용하여 리액트 프로젝트의 초기세팅을 하는 법과 Javascript 확장 문법인 JSX의 기본적인 문법들을 정리한다. ","tags":["react"],"title":"[React Basis] Session #1. CRA(Create-React-App)와 JSX 문법 정리","socialImage":null}}},"pageContext":{"slug":"/posts/react/200512"}}}