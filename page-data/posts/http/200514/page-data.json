{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/http/200514","result":{"data":{"markdownRemark":{"id":"c5a8ff04-10c0-54d6-a030-fccb213a5fc5","html":"<h1 id=\"1-http-핵심요소와-구조\" style=\"position:relative;\"><a href=\"#1-http-%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C%EC%99%80-%EA%B5%AC%EC%A1%B0\" aria-label=\"1 http 핵심요소와 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. HTTP 핵심요소와 구조</h1>\n<h2 id=\"http-는-\" style=\"position:relative;\"><a href=\"#http-%EB%8A%94-\" aria-label=\"http 는  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 는 ?</h2>\n<ul>\n<li>HyperText Transfer Protocol</li>\n<li>하이퍼텍스트(HTML) 문서를 주고받기 위해 만들어진 protocol(규약, 약속).</li>\n<li>즉 웹상에서 네트워크로 서버끼리 통신을 할때 어떠한 형식으로 서로 통신을 하자고 규정해 놓은 “통신 형식” 혹은 “통신 구조” 라고 보면 된다.</li>\n<li>프론트앤드 서버와 클라이언트간의 통신에 사용된다.</li>\n<li>또한 백앤드와 프론트앤드 서버간에의 통신에도 사용된다.</li>\n<li>HTTP는 TCP/IP 기반으로 되어있다.</li>\n</ul>\n<h2 id=\"http의-특징\" style=\"position:relative;\"><a href=\"#http%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"http의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP의 특징</h2>\n<p><strong>Request/Response</strong></p>\n<ul>\n<li>HTTP는 기본적으로 요청(request)과 응답(response) 구조로 이루어져 있다.</li>\n<li>클라이언트가 HTTP request를 서버에 보내면 서버는 HTTP response를 보내는 식으로 모든 통신이 이루어진다.</li>\n</ul>\n<p><strong>Stateless</strong></p>\n<ul>\n<li>HTTP는 상태를 저장하지 않는다. (stateless)</li>\n<li>즉, 요청이 오면 응답을 할뿐이지 이 각각의 통신은 연결되어 있지 않고 독립적이다.</li>\n<li>그래서 여러 요청과 응답의 데이터 등이 필요할때에는 쿠키나 세션등을 사용하게 된다. (ex. 로그인 상태 유지 등)</li>\n</ul>\n<h2 id=\"http의-구조\" style=\"position:relative;\"><a href=\"#http%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"http의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP의 구조</h2>\n<h3 id=\"1-http-request-구조\" style=\"position:relative;\"><a href=\"#1-http-request-%EA%B5%AC%EC%A1%B0\" aria-label=\"1 http request 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) HTTP Request 구조</h3>\n<ul>\n<li>Start line</li>\n<li>Headers</li>\n<li>Body : 해당 request의 실제 내용 (GET request들은 비어 있는 경우가 많음)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">POST</span> <span class=\"token operator\">/</span>payment<span class=\"token operator\">-</span>sync <span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\n\nAccept<span class=\"token operator\">:</span> application<span class=\"token operator\">/</span>json\nAccept<span class=\"token operator\">-</span>Encoding<span class=\"token operator\">:</span> gzip<span class=\"token punctuation\">,</span> deflate\nConnection<span class=\"token operator\">:</span> keep<span class=\"token operator\">-</span>alive\nContent<span class=\"token operator\">-</span>Length<span class=\"token operator\">:</span> <span class=\"token number\">83</span>\nContent<span class=\"token operator\">-</span>Type<span class=\"token operator\">:</span> application<span class=\"token operator\">/</span>json\nHost<span class=\"token operator\">:</span> intropython<span class=\"token punctuation\">.</span>com\nUser<span class=\"token operator\">-</span>Agent<span class=\"token operator\">:</span> HTTPie<span class=\"token operator\">/</span><span class=\"token number\">0.9</span><span class=\"token number\">.3</span>\n\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"imp_uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"imp_1234567890\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"merchant_uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"order_id_8237352\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"paid\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">Start line</code> : : 말 그대로 request의 첫 줄</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">POST</span> <span class=\"token operator\">/</span>payment<span class=\"token operator\">-</span>sync <span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span>\n<span class=\"token comment\">//method / Request target / version</span></code></pre></div>\n<ul>\n<li>\n<p>HTTP request의 start line또한 3부분으로 구성되어 있다.</p>\n<ul>\n<li>HTTP Method</li>\n<li>해당 request가 의도한 action을 정의하는 부분</li>\n<li>HTTP Methods에는 <code class=\"language-text\">GET</code> <code class=\"language-text\">POST</code> <code class=\"language-text\">PUT</code> <code class=\"language-text\">DELETE</code> <code class=\"language-text\">OPTIONS</code> 등이 있다.</li>\n<li>주로 <code class=\"language-text\">GET</code>과 <code class=\"language-text\">POST</code>가 쓰임.</li>\n<li>Request target</li>\n<li>해당 request가 보내지는 타겟</li>\n<li>예를 들어, instagram.com/main에서 /main</li>\n<li>HTTP Version</li>\n<li>말그대로 http 버전. 1.0, 1.1, 2.0 등이 있다.</li>\n</ul>\n</li>\n</ul>\n<p>위의 예시 request가 구체적으로 무슨 내용이냐면, <br>\nintropython.com/payment-syncd 라는 타겟 주소에 POST로 http 1.1 버전을 이용해서 request를 보내고 있다.</p>\n<br>\n<p><code class=\"language-text\">Headers</code> : 해당 request에 대한 추가정보(meta-data)를 담고 있다.</p>\n<ul>\n<li>Key : Value 값으로 되어 있다.</li>\n<li>예를 들어 <code class=\"language-text\">HOST: google.com</code></li>\n<li>Headers도 크게 3부분으로 나뉘지만(general headers, request headers, entity headers) 너무 자세한 부분임으로, 3부분 으로 구성되어 있다는것만 알고 있어도 괜찮다.</li>\n<li>\n<p>자주 사용되는 header 정보에는 다음이 있다:</p>\n<ul>\n<li>Host : 요청이 전송되는 target의 host url: 예를 들어, google.com</li>\n<li>User-Agent : 요청을 보내는 클라이언트의 대한 정보. 예를 들어, 웹브라우저에 대한 정보.</li>\n<li>Accept : 해당 요청이 받을 수 있는 응답(response) 타입.</li>\n<li>Connection : 해당 요청이 끝난후에 클라이언트와 서버가 계속해서 네트워크 컨넥션을 유지 할것인지 아니면 끊을것인지에 대해 지시하는 부분.</li>\n<li>Content-Type : 해당 요청이 보내는 메세지 body의 타입. 예를 들어, JSON을 보내면 application/json.</li>\n<li>Content-Length: 메세지 body의 길이.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Accept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 257\nHost: google.com\nUser-Agent: HTTPie/0.9.3</code></pre></div>\n<br>\n</li>\n</ul>\n<p><code class=\"language-text\">Body</code> : 해당 reqeust의 실제 메세지/내용.\nBody가 없는 request도 많다.\n예를 들어, GET request들은 대부분 body가 없는 경우가 많음.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n&quot;imp_uid&quot;: &quot;imp_1234567890&quot;,\n&quot;merchant_uid&quot;: &quot;order_id_8237352&quot;,\n&quot;status&quot;: &quot;paid&quot;\n}</code></pre></div>\n<br>\n<hr>\n<h3 id=\"2-http-response-구조\" style=\"position:relative;\"><a href=\"#2-http-response-%EA%B5%AC%EC%A1%B0\" aria-label=\"2 http response 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) HTTP Response 구조</h3>\n<p>Response도 전체적으로 Request와 유사한 구조를 가지고 있다.</p>\n<ul>\n<li>Status line</li>\n<li>Headers</li>\n<li>Body</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">HTTP</span><span class=\"token operator\">/</span><span class=\"token number\">1.1</span> <span class=\"token number\">404</span> Not Found\n\nConnection<span class=\"token operator\">:</span> close\nContent<span class=\"token operator\">-</span>Length<span class=\"token operator\">:</span> <span class=\"token number\">1573</span>\nContent<span class=\"token operator\">-</span>Type<span class=\"token operator\">:</span> text<span class=\"token operator\">/</span>html<span class=\"token punctuation\">;</span> charset<span class=\"token operator\">=</span><span class=\"token constant\">UTF</span><span class=\"token operator\">-</span><span class=\"token number\">8</span>\nDate<span class=\"token operator\">:</span> Mon<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> Aug <span class=\"token number\">2018</span> <span class=\"token number\">07</span><span class=\"token operator\">:</span><span class=\"token number\">59</span><span class=\"token operator\">:</span><span class=\"token number\">05</span> <span class=\"token constant\">GMT</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span>en<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span>utf<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span>viewport content<span class=\"token operator\">=</span><span class=\"token string\">\"initial-scale=1, minimum-scale=1, width=device-width\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Error <span class=\"token number\">404</span> <span class=\"token punctuation\">(</span>Not Found<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">{</span>margin<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>padding<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span>html<span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">{</span>font<span class=\"token operator\">:</span><span class=\"token number\">15</span>px<span class=\"token operator\">/</span><span class=\"token number\">22</span>px arial<span class=\"token punctuation\">,</span>sans<span class=\"token operator\">-</span>serif<span class=\"token punctuation\">}</span>html<span class=\"token punctuation\">{</span>background<span class=\"token operator\">:</span>#fff<span class=\"token punctuation\">;</span>color<span class=\"token operator\">:</span>#<span class=\"token number\">222</span><span class=\"token punctuation\">;</span>padding<span class=\"token operator\">:</span><span class=\"token number\">15</span>px<span class=\"token punctuation\">}</span>body<span class=\"token punctuation\">{</span>margin<span class=\"token operator\">:</span><span class=\"token number\">7</span><span class=\"token operator\">%</span> auto <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>max<span class=\"token operator\">-</span>width<span class=\"token operator\">:</span><span class=\"token number\">390</span>px<span class=\"token punctuation\">;</span>min<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span><span class=\"token number\">180</span>px<span class=\"token punctuation\">;</span>padding<span class=\"token operator\">:</span><span class=\"token number\">30</span>px <span class=\"token number\">0</span> <span class=\"token number\">15</span>px<span class=\"token punctuation\">}</span><span class=\"token operator\">*</span> <span class=\"token operator\">></span> body<span class=\"token punctuation\">{</span>background<span class=\"token operator\">:</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token comment\">//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token comment\">//www.google.com/>&lt;span id=logo aria-label=Google>&lt;/span>&lt;/a></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span><span class=\"token number\">404.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>ins<span class=\"token operator\">></span>That’s an error<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ins<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>The requested <span class=\"token constant\">URL</span> <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span><span class=\"token operator\">/</span>payment<span class=\"token operator\">-</span>sync<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> was not found on <span class=\"token keyword\">this</span> server<span class=\"token punctuation\">.</span>  <span class=\"token operator\">&lt;</span>ins<span class=\"token operator\">></span>That’s all we know<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ins<span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">Status Line</code> : Response의 상태를 간략하게 나타내주는 부분.</p>\n<ul>\n<li>\n<p>3부분으로 구성되어 있다.</p>\n<ul>\n<li>HTTP 버젼</li>\n<li>Status code: 응답 상태를 나타내는 코드. 숫자로 되어 있는 코드.\n예를 들어, 200</li>\n<li>Status text: 응답 상태를 간략하게 설명해주는 부분.\n예를 들어, “Not Found”</li>\n</ul>\n</li>\n</ul>\n<br>\n<p><code class=\"language-text\">headers</code> : Response의 headers와 동일하게 Response의 세부정보(meta-data)를 담고 있다.</p>\n<ul>\n<li>다만 response에서만 사용되는 header 값들이 있다.</li>\n<li>예를 들어, User-Agent 대신에 Server 헤더가 사용된다.</li>\n</ul>\n<p><code class=\"language-text\">Body</code> : Response의 body와 일반적으로 동일하다.</p>\n<ul>\n<li>Request와 마찬가지로 모든 response가 body가 있지는 않다. 데이터를 전송할 필요가 없을경우 body가 비어있게 된다.</li>\n</ul>\n<h2 id=\"2-자주-쓰이는-http-methods\" style=\"position:relative;\"><a href=\"#2-%EC%9E%90%EC%A3%BC-%EC%93%B0%EC%9D%B4%EB%8A%94-http-methods\" aria-label=\"2 자주 쓰이는 http methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 자주 쓰이는 HTTP Methods</h2>\n<h3 id=\"1-get\" style=\"position:relative;\"><a href=\"#1-get\" aria-label=\"1 get permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) GET</h3>\n<p>이름 그대로 어떠한 데이타를 서버로 부터 받아(GET)올때 주로 사용하는 Method.\n데이터 생성/수정/삭제 없이 받아오기만 할때 사용된다.\n가장 간단하고 많이 사용되는 HTTP Method\n언급한대로 주로 데이터를 받아올때 사용되기 때문에 request에 body를 안 보내는 경우가 많다.</p>\n<h3 id=\"2-post\" style=\"position:relative;\"><a href=\"#2-post\" aria-label=\"2 post permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) POST</h3>\n<p>데이터를 생성/수정/삭제 할때 주로 사용되는 Method.\n데이터를 생성 및 수정 할때 많이 사용하기 때문에 대부분의 경우 requst body가 포함되서 보내진다.</p>\n<h2 id=\"참고-알고-있으면-좋은-http-methods\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%95%8C%EA%B3%A0-%EC%9E%88%EC%9C%BC%EB%A9%B4-%EC%A2%8B%EC%9D%80-http-methods\" aria-label=\"참고 알고 있으면 좋은 http methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[참고] 알고 있으면 좋은 HTTP Methods</h2>\n<h3 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OPTIONS</h3>\n<p>주로 요청 URI에서 사용할 수 있는 Method를 받아올때 사용된다.\n예를 들어, /update uri에서 어떤 method를 요청 가능한가(GET? POST?)를 알고 싶으면 먼저 OPTIONS 요청을 사용해서 확인하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http -v OPTIONS http://example.org\n\nOPTIONS / HTTP/1.1\nAccept: _/_\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 0\nHost: example.org\nUser-Agent: HTTPie/0.9.3\n\nHTTP/1.1 200 OK\nAllow: OPTIONS, GET, HEAD, POST\nCache-Control: max-age=604800\nContent-Length: 0\nDate: Mon, 20 Aug 2018 08:37:45 GMT\nExpires: Mon, 27 Aug 2018 08:37:45 GMT\nServer: EOS (vny006/0450)</code></pre></div>\n<h3 id=\"put\" style=\"position:relative;\"><a href=\"#put\" aria-label=\"put permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PUT</h3>\n<p>POST와 비슷하다. 데이터를 생성 할때 사용되는 Method.\nPOST와 겹치기 때문에 PUT을 사용하는 곳도 있고 POST로 통일해서 사용하는 곳도 있는데, 최근 몇년 사이에 POST에 밀려서 잘 사용안되는 추세.</p>\n<h3 id=\"delete\" style=\"position:relative;\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DELETE</h3>\n<p>특정 데이터를 서버에서 삭제 요청을 보낼때 쓰이는 Method\nPUT과 마찬가지로 POST에 밀려서 잘 사용안되는 추세.</p>\n<br>\n<h2 id=\"3-자주-쓰이는-http-status-code\" style=\"position:relative;\"><a href=\"#3-%EC%9E%90%EC%A3%BC-%EC%93%B0%EC%9D%B4%EB%8A%94-http-status-code\" aria-label=\"3 자주 쓰이는 http status code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 자주 쓰이는 HTTP Status Code</h2>\n<p><strong>200 OK</strong>\n가장 자주 보게되는 status code.\n문제없이 다 잘 실행 되었을때 보내는 코드.</p>\n<p><strong>301 Moved Permanently</strong>\n해당 URI가 다른 주소로 바뀌었을때 보내는 코드.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/1.1 301 Moved Permanently\nLocation: http://www.example.org/index.asp</code></pre></div>\n<p><strong>400 Bad Request</strong>\n해당 요청이 잘못된 요청일대 보내는 코드.\n주로 요청에 포함된 input 값들이 잘못된 값들이 보내졌을때 사용되는 코드.\n예를 들어, 전화번호를 보내야 되는데 text가 보내졌을때 등등.</p>\n<p><strong>401 Unauthorized</strong>\n유저가 해당 요청을 진행 하려면 먼저 로그인을 하거나 회원 가입을 하거나 등등이 필요하다는것을 나타내려 할때 쓰이는 코드.</p>\n<p><strong>403 Forbidden</strong>\n유저가 해당 요청에 대한 권한이 없다는 뜻.\n예를 들어, 오직 과금을 한 유저만 볼 수 있는 데이터를 요청 했을때 등.</p>\n<p><strong>404 Not Found</strong>\n요청된 uri가 존재 하지 않는다는 뜻.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http -v google.com/no-such-uri\n\nGET /no-such-uri HTTP/1.1\nAccept: _/_\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nHost: google.com\nUser-Agent: HTTPie/0.9.3\n\nHTTP/1.1 404 Not Found\nContent-Length: 1572\nContent-Type: text/html; charset=UTF-8\nDate: Mon, 20 Aug 2018 08:46:48 GMT\nReferrer-Policy: no-referrer</code></pre></div>\n<p><code class=\"language-text\">500 Internal Server Error</code>\n서버에서 에러가 났을때 사용되는 코드.\nAPI 개발을 하는 백앤드 개발자들이 싫어하는 코드.</p>\n<br>\n<br>\n<br>\n<p><em>이글은 Wecode Bootcamp의 소중한 공부자료를 보고 정리한 포스팅입니다.🐙</em></p>","fields":{"slug":"/posts/http/200514","tagSlugs":["/tag/http/"]},"frontmatter":{"date":"2020-05-14T01:12:03.284Z","description":"","tags":["http"],"title":"[http] HTTP 핵심요소와 구조, HTTP 메서드","socialImage":null}}},"pageContext":{"slug":"/posts/http/200514"}}}