{"componentChunkName":"component---src-templates-category-template-js","path":"/category/react/page/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react/200507"},"frontmatter":{"date":"2020-05-07T04:12:03.284Z","description":"리액트에서 컴포넌트를 만드는 방법은 크게 두가지로 나뉜다. 바로 `함수형 컴포넌트`와 `클래스형 컴포넌트`를 만드는 것인데 각각의 방법은 다루게 되는 데이터의 성질도 다르다.","category":"react","title":"[React Basis] 컴포넌트를 만드는 두번째 방법: Class Component"}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react/200505/2"},"frontmatter":{"date":"2020-05-05T05:12:03.284Z","description":"앞선 포스팅을 통해서 컴포넌트에 데이터를 전달하는 방법에 대해 알아봤다. 하지만 이걸로는 부족하다.  왜냐면 앞으로 동적 웹을 만들것이기 때문에 서버에서 받게 되는 데이터가 어떤것이 될지 모른다는 상태에서 코드를 짜야하는데...","category":"react","title":"[React Basis] 컴포넌트에 정보를 전달하기 2  feat. Array.map( ) "}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react/200505"},"frontmatter":{"date":"2020-05-05T04:12:03.284Z","description":"`자 이제 시작이야~ 본격적인 리액트의 세계 속으로!`  지난 포스팅에서 리액트의 특징 몇가지와 컴포넌트를 만드는 법에 대해 알아봤다. 이번에는 단순히 같은 내용의 컴포넌트를 찍어내는게 아니라 내가 원하는 데이터에 따라 언제든지 다른 내용을 찍어내는 컴포넌트를 만들어보려고 한다.  ","category":"react","title":"[React Basis] 컴포넌트에 정보를 전달하기 1 "}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react/200504/2"},"frontmatter":{"date":"2020-05-04T05:12:03.284Z","description":"리액트는 페이스북과 인스타그램에서 사용자 경험을 향상하기 위해 만든 라이브러리로, 브라우저가 동적으로 기능할 때 서버에서 코드를 받아 다시 렌더링해야되는 문제(server side rendering)를 해결하기 위해 만들어졌다.","category":"react","title":"[React Basis] 안녕, 리액트? + 컴포넌트를 만드는 첫번째 방법: Function Component"}}}]}},"pageContext":{"category":"react","currentPage":2,"postsLimit":4,"postsOffset":8,"prevPagePath":"/category/react/page/1","nextPagePath":"/category/react/page/3","hasPrevPage":true,"hasNextPage":true}}}